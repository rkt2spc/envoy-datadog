resources:
  - "@type": type.googleapis.com/envoy.config.listener.v3.Listener
    name: listener-8080
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 8080
    filter_chains:
      - filters:
          - name: envoy.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              preserve_external_request_id: true
              stat_prefix: ingress_http
              codec_type: AUTO
              access_log:
                - name: envoy.file_access_log
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                    path: /dev/stdout
                    typed_json_format:
                      authority: "%REQ(:AUTHORITY)%"
                      bytes_received: "%BYTES_RECEIVED%"
                      bytes_sent: "%BYTES_SENT%"
                      duration: "%DURATION%"
                      method: "%REQ(:METHOD)%"
                      path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
                      protocol: "%PROTOCOL%"
                      response_code: "%RESPONSE_CODE%"
                      response_code_details: "%RESPONSE_CODE_DETAILS%"
                      response_flags: "%RESPONSE_FLAGS%"
                      start_time: "%START_TIME%"
                      upstream_host: "%UPSTREAM_HOST%"
                      user_agent: "%REQ(USER-AGENT)%"
                      x_envoy_upstream_service_time: "%RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%"
                      x_forwarded_for: "%REQ(X-FORWARDED-FOR)%"
                      x_request_id: "%REQ(X-REQUEST-ID)%"
              http_filters:
                - name: envoy.filters.http.health_check
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.health_check.v3.HealthCheck
                    pass_through_mode: false
                    headers:
                      name: :path
                      exact_match: /status
                - name: envoy.filters.http.router
              route_config:
                name: default
                virtual_hosts:
                  - name: default
                    domains: ["*"]
                    routes:
                      - match: { prefix: "/" }
                        route: { cluster: upstream }
