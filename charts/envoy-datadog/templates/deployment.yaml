apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "envoy-datadog.fullname" . }}
  labels:
    {{- include "envoy-datadog.labels" . | nindent 4 }}
spec:
  revisionHistoryLimit: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.deployment.replicaCount | default 1 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "envoy-datadog.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.deployment.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "envoy-datadog.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.deployment.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ include "envoy-datadog.serviceAccountName" . }}
      {{- end }}
      {{- with .Values.deployment.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: envoy
          {{- with .Values.deployment.containers.envoy.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.deployment.containers.envoy.image.repository }}:{{ .Values.deployment.containers.envoy.image.tag }}"
          imagePullPolicy: {{ .Values.deployment.containers.envoy.image.pullPolicy }}
          {{- with .Values.deployment.containers.envoy.env }}
          env:
          {{- toYaml . | nindent 10 }}
          {{- end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          startupProbe:
            tcpSocket:
              port: 8080
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 30
          livenessProbe:
            tcpSocket:
              port: 8080
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              scheme: HTTP
              port: 8080
              path: /status
            periodSeconds: 5
            timeoutSeconds: 5
            successThreshold: 2
            failureThreshold: 3
          resources:
            {{- toYaml .Values.deployment.containers.envoy.resources | nindent 12 }}
      {{- with .Values.deployment.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchLabels:
                    {{- include "envoy-datadog.selectorLabels" . | nindent 20 }}
              weight: 100
      {{- with .Values.deployment.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
